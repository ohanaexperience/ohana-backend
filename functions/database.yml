runMigrations:
    handler: src/database/lambda/runMigrations.handler
    timeout: 900
    package:
        patterns:
            - db/migrations/**/*
    url:
        cors: true
    vpc:
        securityGroupIds:
            - !Ref LambdaSecurityGroup
        subnetIds:
            - !Ref PrivateSubnetA
            - !Ref PrivateSubnetB
    environment:
        DB_ENDPOINT: !GetAtt PostgresRDSServerlessCluster.Endpoint.Address
        DB_NAME: ${self:custom.resourceNames.postgresDB}
        DB_PORT: ${env:POSTGRES_PORT}
        DB_USER: ${env:POSTGRES_USERNAME}
        DB_PASSWORD: ${env:POSTGRES_PASSWORD}

clearDatabase:
    handler: src/database/lambda/clearDatabase.handler
    timeout: 900
    url:
        cors: true
    vpc:
        securityGroupIds:
            - !Ref LambdaSecurityGroup
        subnetIds:
            - !Ref PrivateSubnetA
            - !Ref PrivateSubnetB
    environment:
        DB_ENDPOINT: !GetAtt PostgresRDSServerlessCluster.Endpoint.Address
        DB_NAME: ${self:custom.resourceNames.postgresDB}
        DB_PORT: ${env:POSTGRES_PORT}
        DB_USER: ${env:POSTGRES_USERNAME}
        DB_PASSWORD: ${env:POSTGRES_PASSWORD}

testDatabase:
    handler: src/database/lambda/testDatabase.handler
    timeout: 900
    url:
        cors: true
    vpc:
        securityGroupIds:
            - !Ref LambdaSecurityGroup
        subnetIds:
            - !Ref PrivateSubnetA
            - !Ref PrivateSubnetB
    environment:
        DB_ENDPOINT: !GetAtt PostgresRDSServerlessCluster.Endpoint.Address
        DB_NAME: ${self:custom.resourceNames.postgresDB}
        DB_PORT: ${env:POSTGRES_PORT}
        DB_USER: ${env:POSTGRES_USERNAME}
        DB_PASSWORD: ${env:POSTGRES_PASSWORD}

seedDatabase:
    handler: src/database/lambda/seedDatabase.handler
    timeout: 900
    url:
        cors: true
    vpc:
        securityGroupIds:
            - !Ref LambdaSecurityGroup
        subnetIds:
            - !Ref PrivateSubnetA
            - !Ref PrivateSubnetB
    environment:
        DB_ENDPOINT: !GetAtt PostgresRDSServerlessCluster.Endpoint.Address
        DB_NAME: ${self:custom.resourceNames.postgresDB}
        DB_PORT: ${env:POSTGRES_PORT}
        DB_USER: ${env:POSTGRES_USERNAME}
        DB_PASSWORD: ${env:POSTGRES_PASSWORD}
