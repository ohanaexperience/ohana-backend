authPhoneRegister:
    handler: src/auth/lambda/phone/register.handler
    timeout: 29
    events:
        - http:
              path: /v1/auth/phone/register
              method: POST
              cors: true
    environment:
        USER_POOL_CLIENT_ID: !Ref UserPoolClient

authEmailRegister:
    handler: src/auth/lambda/email/register.handler
    timeout: 29
    events:
        - http:
              path: /v1/auth/email/register
              method: POST
              cors: true
    environment:
        USER_POOL_CLIENT_ID: !Ref UserPoolClient

authResendEmailCode:
    handler: src/auth/lambda/email/resendCode.handler
    timeout: 29
    events:
        - http:
              path: /v1/auth/email/resend-code
              method: POST
              cors: true
    environment:
        USER_POOL_CLIENT_ID: !Ref UserPoolClient

authConfirmEmailCode:
    handler: src/auth/lambda/email/confirmCode.handler
    timeout: 29
    events:
        - http:
              path: /v1/auth/email/confirm-code
              method: POST
              cors: true
    vpc:
        securityGroupIds:
            - !Ref LambdaSecurityGroup
        subnetIds:
            - !Ref PrivateSubnetA
            - !Ref PrivateSubnetB
    environment:
        DB_ENDPOINT: !GetAtt PostgresRDSServerlessCluster.Endpoint.Address
        DB_NAME: ${self:custom.resourceNames.postgresDB}
        DB_PORT: ${env:POSTGRES_PORT}
        DB_USER: ${env:POSTGRES_USERNAME}
        DB_PASSWORD: ${env:POSTGRES_PASSWORD}
        USER_POOL_ID: !Ref UserPool
        USER_POOL_CLIENT_ID: !Ref UserPoolClient

authForgotPassword:
    handler: src/auth/lambda/email/forgotPassword.handler
    timeout: 29
    events:
        - http:
              path: /v1/auth/email/forgot-password
              method: POST
              cors: true
    environment:
        USER_POOL_CLIENT_ID: !Ref UserPoolClient

authConfirmForgotPassword:
    handler: src/auth/lambda/email/confirmForgotPassword.handler
    timeout: 29
    events:
        - http:
              path: /v1/auth/email/change-password
              method: POST
              cors: true
    environment:
        USER_POOL_CLIENT_ID: !Ref UserPoolClient

authEmailLogin:
    handler: src/auth/lambda/email/login.handler
    timeout: 29
    events:
        - http:
              path: /v1/auth/email/login
              method: POST
              cors: true
    environment:
        USER_POOL_ID: !Ref UserPool
        USER_POOL_CLIENT_ID: !Ref UserPoolClient

authRefreshTokens:
    handler: src/auth/lambda/tokens/refreshTokens.handler
    timeout: 29
    events:
        - http:
              path: /v1/auth/tokens/refresh
              method: POST
              cors: true
    environment:
        USER_POOL_CLIENT_ID: !Ref UserPoolClient

authGoogleLogin:
    handler: src/auth/lambda/google/signIn.handler
    timeout: 29
    events:
        - http:
              path: /v1/auth/google/sign-in
              method: POST
              cors: true
    vpc:
        securityGroupIds:
            - !Ref LambdaSecurityGroup
        subnetIds:
            - !Ref PrivateSubnetA
            - !Ref PrivateSubnetB
    environment:
        DB_ENDPOINT: !GetAtt PostgresRDSServerlessCluster.Endpoint.Address
        DB_NAME: ${self:custom.resourceNames.postgresDB}
        DB_PORT: ${env:POSTGRES_PORT}
        DB_USER: ${env:POSTGRES_USERNAME}
        DB_PASSWORD: ${env:POSTGRES_PASSWORD}
        USER_POOL: ${self:custom.resourceNames.userPool}
        USER_POOL_CLIENT: ${self:custom.resourceNames.userPoolClient}
        USER_POOL_ID: !Ref UserPool
        USER_POOL_CLIENT_ID: !Ref UserPoolClient
        IDENTITY_POOL_ID: !Ref CognitoIdentityPool
