{
    "openapi": "3.0.0",
    "info": {
        "title": "Ohana API",
        "description": "API documentation for Ohana backend\n\nBase URL: https://ikfwakanfh.execute-api.us-east-1.amazonaws.com",
        "version": "1.0.0",
        "contact": {
            "email": "support@ohana.com"
        }
    },
    "servers": [
        {
            "url": "https://ikfwakanfh.execute-api.us-east-1.amazonaws.com/dev",
            "description": "Development server"
        }
    ],
    "tags": [
        {
            "name": "Auth",
            "description": "User authentication endpoints"
        },
        {
            "name": "User",
            "description": "User endpoints"
        },
        {
            "name": "Host",
            "description": "Host endpoints"
        }
    ],
    "paths": {
        "/v1/auth/phone/register": {
            "post": {
                "tags": ["Auth"],
                "summary": "Phone Registration",
                "description": "Registers a user with a phone number.",
                "operationId": "userPhoneRegister",
                "requestBody": {
                    "description": "Phone number object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["phoneNumber"],
                                "properties": {
                                    "phoneNumber": {
                                        "type": "string",
                                        "description": "Phone number in E.164 format",
                                        "format": "phone",
                                        "example": "+1234567890"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Verification code successfully sent."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Missing Phone Number": {
                                        "value": {
                                            "error": "MISSING_PHONE_NUMBER",
                                            "message": "Phone number is required."
                                        }
                                    },
                                    "Invalid Phone Number Type": {
                                        "value": {
                                            "error": "INVALID_PHONE_NUMBER_TYPE",
                                            "message": "Phone number must be a string."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/v1/auth/email/register": {
            "post": {
                "tags": ["Auth"],
                "summary": "Email Address Registration",
                "description": "Creates a new user with an email and password. Password must be at least 8 characters long and contain uppercase, lowercase, number, and special characters.",
                "operationId": "authEmailRegister",
                "requestBody": {
                    "description": "Email registration details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["email", "password"],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "description": "Valid email address",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "Password must be at least 8 characters long and contain uppercase, lowercase, number, and special characters.",
                                        "example": "Password123!",
                                        "minLength": 8
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User successfully created."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Missing Email": {
                                        "value": {
                                            "error": "MISSING_EMAIL",
                                            "message": "Email is required."
                                        }
                                    },
                                    "Invalid Email": {
                                        "value": {
                                            "error": "INVALID_EMAIL",
                                            "message": "Invalid email format."
                                        }
                                    },
                                    "Invalid Email Type": {
                                        "value": {
                                            "error": "INVALID_EMAIL_TYPE",
                                            "message": "Email must be a string."
                                        }
                                    },
                                    "Missing Password": {
                                        "value": {
                                            "error": "MISSING_PASSWORD",
                                            "message": "Password is required."
                                        }
                                    },
                                    "Invalid Password Type": {
                                        "value": {
                                            "error": "INVALID_PASSWORD_TYPE",
                                            "message": "Password must be a string."
                                        }
                                    },
                                    "Password Too Short": {
                                        "value": {
                                            "error": "PASSWORD_MIN_LENGTH",
                                            "message": "Password must be at least 8 characters long."
                                        }
                                    },
                                    "Password Missing Uppercase": {
                                        "value": {
                                            "error": "PASSWORD_UPPERCASE",
                                            "message": "Password must contain at least one uppercase letter."
                                        }
                                    },
                                    "Password Missing Lowercase": {
                                        "value": {
                                            "error": "PASSWORD_LOWERCASE",
                                            "message": "Password must contain at least one lowercase letter."
                                        }
                                    },
                                    "Password Missing Number": {
                                        "value": {
                                            "error": "PASSWORD_NUMBER",
                                            "message": "Password must contain at least one number."
                                        }
                                    },
                                    "Password Missing Symbol": {
                                        "value": {
                                            "error": "PASSWORD_SYMBOL",
                                            "message": "Password must contain at least one special character."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/v1/auth/email/resend-code": {
            "post": {
                "tags": ["Auth"],
                "summary": "Resend Email Verification Code",
                "description": "Resends the confirmation code to the user's email address.",
                "operationId": "emailResendCode",
                "requestBody": {
                    "description": "Email details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["email"],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "description": "Valid email address",
                                        "example": "user@example.com"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email verification code sent."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Missing Email": {
                                        "value": {
                                            "error": "MISSING_EMAIL",
                                            "message": "Email is required."
                                        }
                                    },
                                    "Invalid Email": {
                                        "value": {
                                            "error": "INVALID_EMAIL",
                                            "message": "Invalid email format."
                                        }
                                    },
                                    "Invalid Email Type": {
                                        "value": {
                                            "error": "INVALID_EMAIL_TYPE",
                                            "message": "Email must be a string."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/v1/auth/email/confirm-code": {
            "post": {
                "tags": ["Auth"],
                "summary": "Confirm Email Registration",
                "description": "Confirms a user's email registration using the verification code.",
                "operationId": "emailConfirmCode",
                "requestBody": {
                    "description": "Email confirmation details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["email", "confirmationCode"],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "description": "Valid email address",
                                        "example": "user@example.com"
                                    },
                                    "confirmationCode": {
                                        "type": "string",
                                        "description": "6-digit verification code sent to email",
                                        "minLength": 6,
                                        "example": "123456"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Verification code confirmed."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Missing Email": {
                                        "value": {
                                            "error": "MISSING_EMAIL",
                                            "message": "Email is required."
                                        }
                                    },
                                    "Invalid Email": {
                                        "value": {
                                            "error": "INVALID_EMAIL",
                                            "message": "Invalid email format."
                                        }
                                    },
                                    "Invalid Email Type": {
                                        "value": {
                                            "error": "INVALID_EMAIL_TYPE",
                                            "message": "Email must be a string."
                                        }
                                    },
                                    "Missing Confirmation Code": {
                                        "value": {
                                            "error": "MISSING_CONFIRMATION_CODE",
                                            "message": "Confirmation code is required."
                                        }
                                    },
                                    "Invalid Confirmation Code Type": {
                                        "value": {
                                            "error": "INVALID_CONFIRMATION_CODE_TYPE",
                                            "message": "Confirmation code must be a string."
                                        }
                                    },
                                    "Confirmation Code Too Short": {
                                        "value": {
                                            "error": "CONFIRMATION_CODE_MIN_LENGTH",
                                            "message": "Confirmation code must be at least 6 characters long."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/v1/auth/email/forgot-password": {
            "post": {
                "tags": ["Auth"],
                "summary": "Forgot Password",
                "description": "Sends a reset password email to the user's email address.",
                "operationId": "emailForgotPassword",
                "requestBody": {
                    "description": "Email details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["email"],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "description": "Valid email address",
                                        "example": "user@example.com"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Email sent with instructions to reset password."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Missing Email": {
                                        "value": {
                                            "error": "MISSING_EMAIL",
                                            "message": "Email is required."
                                        }
                                    },
                                    "Invalid Email": {
                                        "value": {
                                            "error": "INVALID_EMAIL",
                                            "message": "Invalid email format."
                                        }
                                    },
                                    "Invalid Email Type": {
                                        "value": {
                                            "error": "INVALID_EMAIL_TYPE",
                                            "message": "Email must be a string."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/v1/auth/email/change-password": {
            "post": {
                "tags": ["Auth"],
                "summary": "Change Password",
                "description": "Changes a user's password.",
                "operationId": "authChangePassword",
                "requestBody": {
                    "description": "Change password details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": [
                                    "email",
                                    "newPassword",
                                    "confirmationCode"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "description": "Valid email address",
                                        "example": "user@example.com"
                                    },
                                    "newPassword": {
                                        "type": "string",
                                        "description": "New password must be at least 8 characters long and contain uppercase, lowercase, number, and special characters",
                                        "example": "NewPassword123!",
                                        "minLength": 8
                                    },
                                    "confirmationCode": {
                                        "type": "string",
                                        "description": "6-digit verification code sent to email",
                                        "minLength": 6,
                                        "example": "123456"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password successfully changed."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Missing Email": {
                                        "value": {
                                            "error": "MISSING_EMAIL",
                                            "message": "Email is required."
                                        }
                                    },
                                    "Invalid Email": {
                                        "value": {
                                            "error": "INVALID_EMAIL",
                                            "message": "Invalid email format."
                                        }
                                    },
                                    "Invalid Email Type": {
                                        "value": {
                                            "error": "INVALID_EMAIL_TYPE",
                                            "message": "Email must be a string."
                                        }
                                    },
                                    "Missing Password": {
                                        "value": {
                                            "error": "MISSING_PASSWORD",
                                            "message": "Password is required."
                                        }
                                    },
                                    "Invalid Password Type": {
                                        "value": {
                                            "error": "INVALID_PASSWORD_TYPE",
                                            "message": "Password must be a string."
                                        }
                                    },
                                    "Password Too Short": {
                                        "value": {
                                            "error": "PASSWORD_MIN_LENGTH",
                                            "message": "Password must be at least 8 characters long."
                                        }
                                    },
                                    "Password Missing Uppercase": {
                                        "value": {
                                            "error": "PASSWORD_UPPERCASE",
                                            "message": "Password must contain at least one uppercase letter."
                                        }
                                    },
                                    "Password Missing Lowercase": {
                                        "value": {
                                            "error": "PASSWORD_LOWERCASE",
                                            "message": "Password must contain at least one lowercase letter."
                                        }
                                    },
                                    "Password Missing Number": {
                                        "value": {
                                            "error": "PASSWORD_NUMBER",
                                            "message": "Password must contain at least one number."
                                        }
                                    },
                                    "Password Missing Symbol": {
                                        "value": {
                                            "error": "PASSWORD_SYMBOL",
                                            "message": "Password must contain at least one special character."
                                        }
                                    },
                                    "Missing Confirmation Code": {
                                        "value": {
                                            "error": "MISSING_CONFIRMATION_CODE",
                                            "message": "Confirmation code is required."
                                        }
                                    },
                                    "Invalid Confirmation Code Type": {
                                        "value": {
                                            "error": "INVALID_CONFIRMATION_CODE_TYPE",
                                            "message": "Confirmation code must be a string."
                                        }
                                    },
                                    "Confirmation Code Too Short": {
                                        "value": {
                                            "error": "CONFIRMATION_CODE_MIN_LENGTH",
                                            "message": "Confirmation code must be at least 6 characters long."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/v1/auth/email/login": {
            "post": {
                "tags": ["Auth"],
                "summary": "Email Login",
                "description": "Logs in a user with an email and password.",
                "operationId": "authEmailLogin",
                "requestBody": {
                    "description": "Login credentials",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["email", "password"],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "description": "Valid email address",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "description": "User's password",
                                        "example": "Password123!"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "AccessToken": {
                                            "type": "string",
                                            "description": "JWT access token",
                                            "example": "eyJraWQiOiJtTGE5Y0pzQTV4R1N6RHJKNGJBdmcrR3BRY2YwUWNOQTJ5WElUYUNSSUxrPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIyNDg4ODQzOC1jMDgxLTcwMWQtNGQ3Yi1hYWFjNzNhMThmODYiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9CbWR6Ym1iRjMiLCJjbGllbnRfaWQiOiIydGk3NTJndWFyZTdpY2UzcWZxcThvZGg0cyIsIm9yaWdpbl9qdGkiOiIxM2Q4MDA0Ny05ZDcyLTQwOWUtOTA4Ny03MjViYzU1ZDhjYjciLCJldmVudF9pZCI6ImI2ZTQ5ZGFmLWIwZjAtNDVjMS1hZDY1LTM2ZGMyM2FkMWRiYiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3NDUxNjYyMzUsImV4cCI6MTc0NTE2OTgzNSwiaWF0IjoxNzQ1MTY2MjM1LCJqdGkiOiIwYjYxMDVlYS1mYzYxLTRmMzktYWEyZi03NjlhN2YwMjJjYjkiLCJ1c2VybmFtZSI6IjI0ODg4NDM4LWMwODEtNzAxZC00ZDdiLWFhYWM3M2ExOGY4NiJ9.jLcZDQTkq7T3UTMmwaL22HWGeAfttW4StYOwX9dtlk2Vm4VIvPhuvb7HjJjvS_SDsGO19YZF9bG-DA-Pyc2JiUMes7A28I-_L5B_kDt9ucaKYcEJBpwGeFp0svmpFDX8wZ__VdhZZauC8Go-6bbQW49lVehBSwXN8DAS37I9VOAclE2OKnpgFP1zwBMKjGtKjG84pEoZJ9AQ_GOZ3jtJE9jMvTzyNI3-cTAVwY47SbqIKyGQWjtK_LEKahlmmRKKn0CdqnfiRbJV50XElbceq3lCvl1HOzCSFfcbLPtxZ_OPL3hmEETyg5uK7L_OEERzZTxOGarXqSJf2td3oxXC_A"
                                        },
                                        "ExpiresIn": {
                                            "type": "number",
                                            "description": "Token expiration time in seconds",
                                            "example": "3600"
                                        },
                                        "IdToken": {
                                            "type": "string",
                                            "description": "JWT ID token",
                                            "example": "eyJraWQiOiJwbFhDUE9IZ3d6ZVdkYkpLZXg5Z0pcL2JabVwvb2luMndjOUQ2V3hIWlwvbGtZPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIyNDg4ODQzOC1jMDgxLTcwMWQtNGQ3Yi1hYWFjNzNhMThmODYiLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnVzLWVhc3QtMS5hbWF6b25hd3MuY29tXC91cy1lYXN0LTFfQm1kemJtYkYzIiwiY29nbml0bzp1c2VybmFtZSI6IjI0ODg4NDM4LWMwODEtNzAxZC00ZDdiLWFhYWM3M2ExOGY4NiIsIm9yaWdpbl9qdGkiOiIxM2Q4MDA0Ny05ZDcyLTQwOWUtOTA4Ny03MjViYzU1ZDhjYjciLCJhdWQiOiIydGk3NTJndWFyZTdpY2UzcWZxcThvZGg0cyIsImV2ZW50X2lkIjoiYjZlNDlkYWYtYjBmMC00NWMxLWFkNjUtMzZkYzIzYWQxZGJiIiwidG9rZW5fdXNlIjoiaWQiLCJhdXRoX3RpbWUiOjE3NDUxNjYyMzUsImV4cCI6MTc0NTE2OTgzNSwiaWF0IjoxNzQ1MTY2MjM1LCJqdGkiOiIwZjcxNjJiNC0zYmU3LTRkODgtOTE3My00ZTdmOTdjM2FhYmMiLCJlbWFpbCI6Imh5YW4yODkzQGdtYWlsLmNvbSJ9.bmQ9KOzyUiSpPH1QrZvDtGwk8VnK3HQfbU6eaVJ1_6QOlhi4-xeRCWBCZJIfcK2F18LXhQJ17Hwx-7dnm4HnVDBVyZb80qmVXO-vGX8JauA8ulwsZhyjX09TiqBmTEhip-MqpPq6SRyR5tErpJ6dF1IFg6i18JU1mLqE2XIy3SxZc4RtK5VW7J92y-Sd_8z0qgsXdfkDOEWi96DnQcrR1YXIjWonhj0T8WkcH_p94Bfp_SUxKLhTu-PpLU8W0HLNtgMC-VwtaxcPdNaT84uE8qjho9aXxu08GNgquqElTqkZi1Ru9njCkixPpYq4tt5mud-Qr1CHu9qLx5UG2zGeVg"
                                        },
                                        "RefreshToken": {
                                            "type": "string",
                                            "description": "JWT refresh token",
                                            "example": "eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.c7_A1VYdJPxjjpiU6_a7kTWCYZjXpeYzV1HdH3GcPok524dKEK_7IXDkujqQxPEhGiEmW3MuReskJhJy9Jv8xS4jI01QD4RSBcQYid1RqfTO0zYGsN0mrJfkkW9qbtgk7hNw4YJDVCrsBBY2Q2q9PTQkZojwkXEhVvkA4H1JU9XEx1Z6rKljHVfIvUyl93Be0qA7cDHsRgAOnde9BeMX_1bxJmVmgX_1I0AwGH5hrKf3L1wAY2qQR5aXw6NfeHOz63YJxfv9B5gRW57GfgncRkYbo7zs4PdTTug9FmciUcOR73bg5__aYC--RpQtTjP9cnUPWaZKhangYmnDv45AfA.YMKu7gsb08Lg47pI.53cIDAtFzHVfIk-U9-0VrKRYqHKjA287noa7fnMJdh7I9KpV5JDNHxRPDbFPvdyuRYdcjKEOsxM9R0ebX0PbwL7NcCyd0WbDBn8EysvEWvtj8FweJ-z3OiQSZkwydWxV3RAWe4q-D1U7aZLJwOsqAP3rgjMXH0ThysiBfjBt54euGNsd1x2bMDBy66qYFYAR1MpqCCdVL468kGUi9grLOedwynsrdEFZkggWQ7ZLbjL1jQpg8AkdnjFSX5lLrL4eMYyAP2ZVkFOnfC4g59QJocsEvdhV0PFKxgePW8IPPar9R8kmCFzeRHYmm7nih7d__tgVBI8zfqjxskUwmMNqdArC4GLBqmMXDFUw_GjTgAs8RyaWDUPyVEI5ezy-J1p0Nq4TVFs6Ac_AYgv3muarpnfA6ZMPxiHWGFzTjYeqAS6EvhgzMW8_99bJ_uDgsHnomA9IF4VOW1yIXxsVoMb__QK5Db02bLueMCMkau33ugSF8JS9pnI41tkBWhuiXSEWEui4G3WMJ8_yM_JNWyGbDVFXBsGeC6J8J0U7SLmjNOmfD2zEbx-UWBc5JLs1nGSkHV3UMHarGgOIlFVHGunnakCPyRo9RJmpsAhxuywALUveHJPSrwpJx-QJ6dcs5DYWb19HyvEZc5kJbAb0PeImVJ5hnMNzZY9xO5eOIDAh7sznZr_ORuKuFdj2Tk1IhfxueHre8-L7Ntap8MTW8rw6kbcuQ1EHac4-2phqZftLuHrvBQXlqHf-n_WW8OqGlwWzYQahLKw6tNT3qbYhHOyGCxVuUME5ABxlK5qUwt1uOsQ250McRYskfSVneeztZYvTFBcBfcfVciQ41FKVcCKswDuGl1-n60Dp7wAL_vHqXf2j93GH5KUocttrpMgqOF4QyujnnEZBZt6uT9IHCBFGXezGX-UcnPM_LLMY7m0cwHqHClCJgg9D13pwwRukjtlCrBm9jZAA7VTibBxatwlC8awaNG978JILk9CrIj72q6wFVxogWO1jv2-pOyNrgf_ZVhdaFEYIlVeIu6XyJ04KIfvbTMIoqTd6hnd5XgzlVDWpfeDzslbcRlFHEogIvLCpKyDhymfHsnpImTbYGkM6zVbRPcoVqppcx6XxSlBkOoZjuvobR1y9D4iok77bZD28UngixD0eIhTE1_nKDdS12qFYhsRMHPJevtRXFj59G9sCQZDtBg0ev2v9wEMBh_LGXwm87nwGdhAulZ7mdaGcpjqo69tGM0lAtz4LJeViGjQwGRHszmXFQ3VsHyS17kZk-6vAfyXeHe_xs4QDjjPXTd9rHYW0quMMfupfqnIG35D0nTBRNAp2lzvUxw.FMMP5l6-X1lE_zTB8M_55A"
                                        },
                                        "TokenType": {
                                            "type": "string",
                                            "description": "Type of token",
                                            "example": "Bearer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Missing Email": {
                                        "value": {
                                            "error": "MISSING_EMAIL",
                                            "message": "Email is required."
                                        }
                                    },
                                    "Invalid Email": {
                                        "value": {
                                            "error": "INVALID_EMAIL",
                                            "message": "Invalid email format."
                                        }
                                    },
                                    "Invalid Email Type": {
                                        "value": {
                                            "error": "INVALID_EMAIL_TYPE",
                                            "message": "Email must be a string."
                                        }
                                    },
                                    "Missing Password": {
                                        "value": {
                                            "error": "MISSING_PASSWORD",
                                            "message": "Password is required."
                                        }
                                    },
                                    "Invalid Password Type": {
                                        "value": {
                                            "error": "INVALID_PASSWORD_TYPE",
                                            "message": "Password must be a string."
                                        }
                                    },
                                    "Password Too Short": {
                                        "value": {
                                            "error": "PASSWORD_MIN_LENGTH",
                                            "message": "Password must be at least 8 characters long."
                                        }
                                    },
                                    "Password Missing Uppercase": {
                                        "value": {
                                            "error": "PASSWORD_UPPERCASE",
                                            "message": "Password must contain at least one uppercase letter."
                                        }
                                    },
                                    "Password Missing Lowercase": {
                                        "value": {
                                            "error": "PASSWORD_LOWERCASE",
                                            "message": "Password must contain at least one lowercase letter."
                                        }
                                    },
                                    "Password Missing Number": {
                                        "value": {
                                            "error": "PASSWORD_NUMBER",
                                            "message": "Password must contain at least one number."
                                        }
                                    },
                                    "Password Missing Symbol": {
                                        "value": {
                                            "error": "PASSWORD_SYMBOL",
                                            "message": "Password must contain at least one special character."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/v1/auth/tokens/refresh": {
            "post": {
                "tags": ["Auth"],
                "summary": "Refresh Tokens",
                "description": "Refreshes a user's tokens.",
                "operationId": "authRefreshTokens",
                "requestBody": {
                    "description": "Refresh token details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["refreshToken"],
                                "properties": {
                                    "refreshToken": {
                                        "type": "string",
                                        "format": "jwt",
                                        "description": "JWT refresh token",
                                        "example": "eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.c7_A1VYdJPxjjpiU6_a7kTWCYZjXpeYzV1HdH3GcPok524dKEK_7IXDkujqQxPEhGiEmW3MuReskJhJy9Jv8xS4jI01QD4RSBcQYid1RqfTO0zYGsN0mrJfkkW9qbtgk7hNw4YJDVCrsBBY2Q2q9PTQkZojwkXEhVvkA4H1JU9XEx1Z6rKljHVfIvUyl93Be0qA7cDHsRgAOnde9BeMX_1bxJmVmgX_1I0AwGH5hrKf3L1wAY2qQR5aXw6NfeHOz63YJxfv9B5gRW57GfgncRkYbo7zs4PdTTug9FmciUcOR73bg5__aYC--RpQtTjP9cnUPWaZKhangYmnDv45AfA.YMKu7gsb08Lg47pI.53cIDAtFzHVfIk-U9-0VrKRYqHKjA287noa7fnMJdh7I9KpV5JDNHxRPDbFPvdyuRYdcjKEOsxM9R0ebX0PbwL7NcCyd0WbDBn8EysvEWvtj8FweJ-z3OiQSZkwydWxV3RAWe4q-D1U7aZLJwOsqAP3rgjMXH0ThysiBfjBt54euGNsd1x2bMDBy66qYFYAR1MpqCCdVL468kGUi9grLOedwynsrdEFZkggWQ7ZLbjL1jQpg8AkdnjFSX5lLrL4eMYyAP2ZVkFOnfC4g59QJocsEvdhV0PFKxgePW8IPPar9R8kmCFzeRHYmm7nih7d__tgVBI8zfqjxskUwmMNqdArC4GLBqmMXDFUw_GjTgAs8RyaWDUPyVEI5ezy-J1p0Nq4TVFs6Ac_AYgv3muarpnfA6ZMPxiHWGFzTjYeqAS6EvhgzMW8_99bJ_uDgsHnomA9IF4VOW1yIXxsVoMb__QK5Db02bLueMCMkau33ugSF8JS9pnI41tkBWhuiXSEWEui4G3WMJ8_yM_JNWyGbDVFXBsGeC6J8J0U7SLmjNOmfD2zEbx-UWBc5JLs1nGSkHV3UMHarGgOIlFVHGunnakCPyRo9RJmpsAhxuywALUveHJPSrwpJx-QJ6dcs5DYWb19HyvEZc5kJbAb0PeImVJ5hnMNzZY9xO5eOIDAh7sznZr_ORuKuFdj2Tk1IhfxueHre8-L7Ntap8MTW8rw6kbcuQ1EHac4-2phqZftLuHrvBQXlqHf-n_WW8OqGlwWzYQahLKw6tNT3qbYhHOyGCxVuUME5ABxlK5qUwt1uOsQ250McRYskfSVneeztZYvTFBcBfcfVciQ41FKVcCKswDuGl1-n60Dp7wAL_vHqXf2j93GH5KUocttrpMgqOF4QyujnnEZBZt6uT9IHCBFGXezGX-UcnPM_LLMY7m0cwHqHClCJgg9D13pwwRukjtlCrBm9jZAA7VTibBxatwlC8awaNG978JILk9CrIj72q6wFVxogWO1jv2-pOyNrgf_ZVhdaFEYIlVeIu6XyJ04KIfvbTMIoqTd6hnd5XgzlVDWpfeDzslbcRlFHEogIvLCpKyDhymfHsnpImTbYGkM6zVbRPcoVqppcx6XxSlBkOoZjuvobR1y9D4iok77bZD28UngixD0eIhTE1_nKDdS12qFYhsRMHPJevtRXFj59G9sCQZDtBg0ev2v9wEMBh_LGXwm87nwGdhAulZ7mdaGcpjqo69tGM0lAtz4LJeViGjQwGRHszmXFQ3VsHyS17kZk-6vAfyXeHe_xs4QDjjPXTd9rHYW0quMMfupfqnIG35D0nTBRNAp2lzvUxw.FMMP5l6-X1lE_zTB8M_55A"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "AccessToken": {
                                            "type": "string",
                                            "description": "JWT access token",
                                            "example": "eyJraWQiOiJtTGE5Y0pzQTV4R1N6RHJKNGJBdmcrR3BRY2YwUWNOQTJ5WElUYUNSSUxrPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIyNDg4ODQzOC1jMDgxLTcwMWQtNGQ3Yi1hYWFjNzNhMThmODYiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9CbWR6Ym1iRjMiLCJjbGllbnRfaWQiOiIydGk3NTJndWFyZTdpY2UzcWZxcThvZGg0cyIsIm9yaWdpbl9qdGkiOiIxM2Q4MDA0Ny05ZDcyLTQwOWUtOTA4Ny03MjViYzU1ZDhjYjciLCJldmVudF9pZCI6ImI2ZTQ5ZGFmLWIwZjAtNDVjMS1hZDY1LTM2ZGMyM2FkMWRiYiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3NDUxNjYyMzUsImV4cCI6MTc0NTE2OTgzNSwiaWF0IjoxNzQ1MTY2MjM1LCJqdGkiOiIwYjYxMDVlYS1mYzYxLTRmMzktYWEyZi03NjlhN2YwMjJjYjkiLCJ1c2VybmFtZSI6IjI0ODg4NDM4LWMwODEtNzAxZC00ZDdiLWFhYWM3M2ExOGY4NiJ9.jLcZDQTkq7T3UTMmwaL22HWGeAfttW4StYOwX9dtlk2Vm4VIvPhuvb7HjJjvS_SDsGO19YZF9bG-DA-Pyc2JiUMes7A28I-_L5B_kDt9ucaKYcEJBpwGeFp0svmpFDX8wZ__VdhZZauC8Go-6bbQW49lVehBSwXN8DAS37I9VOAclE2OKnpgFP1zwBMKjGtKjG84pEoZJ9AQ_GOZ3jtJE9jMvTzyNI3-cTAVwY47SbqIKyGQWjtK_LEKahlmmRKKn0CdqnfiRbJV50XElbceq3lCvl1HOzCSFfcbLPtxZ_OPL3hmEETyg5uK7L_OEERzZTxOGarXqSJf2td3oxXC_A"
                                        },
                                        "ExpiresIn": {
                                            "type": "number",
                                            "description": "Token expiration time in seconds",
                                            "example": "3600"
                                        },
                                        "IdToken": {
                                            "type": "string",
                                            "description": "JWT ID token",
                                            "example": "eyJraWQiOiJwbFhDUE9IZ3d6ZVdkYkpLZXg5Z0pcL2JabVwvb2luMndjOUQ2V3hIWlwvbGtZPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIyNDg4ODQzOC1jMDgxLTcwMWQtNGQ3Yi1hYWFjNzNhMThmODYiLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnVzLWVhc3QtMS5hbWF6b25hd3MuY29tXC91cy1lYXN0LTFfQm1kemJtYkYzIiwiY29nbml0bzp1c2VybmFtZSI6IjI0ODg4NDM4LWMwODEtNzAxZC00ZDdiLWFhYWM3M2ExOGY4NiIsIm9yaWdpbl9qdGkiOiIxM2Q4MDA0Ny05ZDcyLTQwOWUtOTA4Ny03MjViYzU1ZDhjYjciLCJhdWQiOiIydGk3NTJndWFyZTdpY2UzcWZxcThvZGg0cyIsImV2ZW50X2lkIjoiYjZlNDlkYWYtYjBmMC00NWMxLWFkNjUtMzZkYzIzYWQxZGJiIiwidG9rZW5fdXNlIjoiaWQiLCJhdXRoX3RpbWUiOjE3NDUxNjYyMzUsImV4cCI6MTc0NTE2OTgzNSwiaWF0IjoxNzQ1MTY2MjM1LCJqdGkiOiIwZjcxNjJiNC0zYmU3LTRkODgtOTE3My00ZTdmOTdjM2FhYmMiLCJlbWFpbCI6Imh5YW4yODkzQGdtYWlsLmNvbSJ9.bmQ9KOzyUiSpPH1QrZvDtGwk8VnK3HQfbU6eaVJ1_6QOlhi4-xeRCWBCZJIfcK2F18LXhQJ17Hwx-7dnm4HnVDBVyZb80qmVXO-vGX8JauA8ulwsZhyjX09TiqBmTEhip-MqpPq6SRyR5tErpJ6dF1IFg6i18JU1mLqE2XIy3SxZc4RtK5VW7J92y-Sd_8z0qgsXdfkDOEWi96DnQcrR1YXIjWonhj0T8WkcH_p94Bfp_SUxKLhTu-PpLU8W0HLNtgMC-VwtaxcPdNaT84uE8qjho9aXxu08GNgquqElTqkZi1Ru9njCkixPpYq4tt5mud-Qr1CHu9qLx5UG2zGeVg"
                                        },
                                        "RefreshToken": {
                                            "type": "string",
                                            "description": "JWT refresh token",
                                            "example": "eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.c7_A1VYdJPxjjpiU6_a7kTWCYZjXpeYzV1HdH3GcPok524dKEK_7IXDkujqQxPEhGiEmW3MuReskJhJy9Jv8xS4jI01QD4RSBcQYid1RqfTO0zYGsN0mrJfkkW9qbtgk7hNw4YJDVCrsBBY2Q2q9PTQkZojwkXEhVvkA4H1JU9XEx1Z6rKljHVfIvUyl93Be0qA7cDHsRgAOnde9BeMX_1bxJmVmgX_1I0AwGH5hrKf3L1wAY2qQR5aXw6NfeHOz63YJxfv9B5gRW57GfgncRkYbo7zs4PdTTug9FmciUcOR73bg5__aYC--RpQtTjP9cnUPWaZKhangYmnDv45AfA.YMKu7gsb08Lg47pI.53cIDAtFzHVfIk-U9-0VrKRYqHKjA287noa7fnMJdh7I9KpV5JDNHxRPDbFPvdyuRYdcjKEOsxM9R0ebX0PbwL7NcCyd0WbDBn8EysvEWvtj8FweJ-z3OiQSZkwydWxV3RAWe4q-D1U7aZLJwOsqAP3rgjMXH0ThysiBfjBt54euGNsd1x2bMDBy66qYFYAR1MpqCCdVL468kGUi9grLOedwynsrdEFZkggWQ7ZLbjL1jQpg8AkdnjFSX5lLrL4eMYyAP2ZVkFOnfC4g59QJocsEvdhV0PFKxgePW8IPPar9R8kmCFzeRHYmm7nih7d__tgVBI8zfqjxskUwmMNqdArC4GLBqmMXDFUw_GjTgAs8RyaWDUPyVEI5ezy-J1p0Nq4TVFs6Ac_AYgv3muarpnfA6ZMPxiHWGFzTjYeqAS6EvhgzMW8_99bJ_uDgsHnomA9IF4VOW1yIXxsVoMb__QK5Db02bLueMCMkau33ugSF8JS9pnI41tkBWhuiXSEWEui4G3WMJ8_yM_JNWyGbDVFXBsGeC6J8J0U7SLmjNOmfD2zEbx-UWBc5JLs1nGSkHV3UMHarGgOIlFVHGunnakCPyRo9RJmpsAhxuywALUveHJPSrwpJx-QJ6dcs5DYWb19HyvEZc5kJbAb0PeImVJ5hnMNzZY9xO5eOIDAh7sznZr_ORuKuFdj2Tk1IhfxueHre8-L7Ntap8MTW8rw6kbcuQ1EHac4-2phqZftLuHrvBQXlqHf-n_WW8OqGlwWzYQahLKw6tNT3qbYhHOyGCxVuUME5ABxlK5qUwt1uOsQ250McRYskfSVneeztZYvTFBcBfcfVciQ41FKVcCKswDuGl1-n60Dp7wAL_vHqXf2j93GH5KUocttrpMgqOF4QyujnnEZBZt6uT9IHCBFGXezGX-UcnPM_LLMY7m0cwHqHClCJgg9D13pwwRukjtlCrBm9jZAA7VTibBxatwlC8awaNG978JILk9CrIj72q6wFVxogWO1jv2-pOyNrgf_ZVhdaFEYIlVeIu6XyJ04KIfvbTMIoqTd6hnd5XgzlVDWpfeDzslbcRlFHEogIvLCpKyDhymfHsnpImTbYGkM6zVbRPcoVqppcx6XxSlBkOoZjuvobR1y9D4iok77bZD28UngixD0eIhTE1_nKDdS12qFYhsRMHPJevtRXFj59G9sCQZDtBg0ev2v9wEMBh_LGXwm87nwGdhAulZ7mdaGcpjqo69tGM0lAtz4LJeViGjQwGRHszmXFQ3VsHyS17kZk-6vAfyXeHe_xs4QDjjPXTd9rHYW0quMMfupfqnIG35D0nTBRNAp2lzvUxw.FMMP5l6-X1lE_zTB8M_55A"
                                        },
                                        "TokenType": {
                                            "type": "string",
                                            "description": "Type of token",
                                            "example": "Bearer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Missing Refresh Token": {
                                        "value": {
                                            "error": "MISSING_REFRESH_TOKEN",
                                            "message": "Refresh token is required."
                                        }
                                    },
                                    "Invalid Refresh Token Type": {
                                        "value": {
                                            "error": "INVALID_REFRESH_TOKEN_TYPE",
                                            "message": "Refresh token must be a string."
                                        }
                                    },
                                    "Invalid Refresh Token": {
                                        "value": {
                                            "error": "INVALID_REFRESH_TOKEN",
                                            "message": "Invalid refresh token."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/v1/auth/google/sign-in": {
            "post": {
                "tags": ["Auth"],
                "summary": "Google Sign In",
                "description": "Signs in a user using Google Id Token.",
                "operationId": "googleSignIn",
                "requestBody": {
                    "description": "Google token details",
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "required": ["idToken"],
                                "properties": {
                                    "idToken": {
                                        "type": "string",
                                        "format": "jwt",
                                        "description": "Google Id Token",
                                        "example": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImMzN2RhNzVjOWZiZTE4YzJjZTkxMjViOWFhMWYzMDBkY2IzMWU4ZDkiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJhenAiOiIxMDY2MjMyNjQ2MTU0LTZsMnVqZ3Qxdmo2NW9udWt1NWZvcjRlYzhwaTVubzZ1LmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwiYXVkIjoiMTA2NjIzMjY0NjE1NC02bDJ1amd0MXZqNjVvbnVrdTVmb3I0ZWM4cGk1bm82dS5hcHBzLmdvb2dsZXVzZXJjb250ZW50LmNvbSIsInN1YiI6IjEwODQ0OTU2MzYwNzcyMDgzMzU4MSIsImVtYWlsIjoiaHlhbjI4OTNAZ21haWwuY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsImF0X2hhc2giOiJGMGQyZEpoemtTRVNBRnBiMmxnVlFRIiwibmFtZSI6IkhhbmsgWWFuIiwicGljdHVyZSI6Imh0dHBzOi8vbGgzLmdvb2dsZXVzZXJjb250ZW50LmNvbS9hL0FDZzhvY0xZU3l1YU52aGI4SVJQRHJiaFJRS3hQSE5LU0NZM3ZPcDFZaV9hY05QRjNoUEFLUT1zOTYtYyIsImdpdmVuX25hbWUiOiJIYW5rIiwiZmFtaWx5X25hbWUiOiJZYW4iLCJpYXQiOjE3NDQ5MDc3MzYsImV4cCI6MTc0NDkxMTMzNn0.WeKiBnKKJqYTiaIQ2bLL-a49uWVQbuGJWqYQ31pJjvP-VfI0VD-IV4dIurSi-jYKLc4-G9A59FMCY9V4S4EFZ0PERno8SZSdJMEJdoA2tGsqqFbIzhi0wSJedaQMSdkr0kbUqejvWaWDggBsMZuOzTczd4Q-UR6PfZlPfNYmlF-RqMerEhbbOEZiIaZiGDPUXQnb5V7m6zYkcGU9_tWN8iMDR7qR0Ajc5OBoRONSYICgceXuU-ABGxCCKGKxjc8lFOPWTB0GUaqQSJYykLebK8n3nUGxOdmTBKTNitxgq8VCX6nQsPfRJUUZmwy36EGlEm6LryFyfNoqA8hged8YNQ"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "AccessToken": {
                                            "type": "string",
                                            "description": "JWT access token",
                                            "example": "eyJraWQiOiJtTGE5Y0pzQTV4R1N6RHJKNGJBdmcrR3BRY2YwUWNOQTJ5WElUYUNSSUxrPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIyNDg4ODQzOC1jMDgxLTcwMWQtNGQ3Yi1hYWFjNzNhMThmODYiLCJpc3MiOiJodHRwczpcL1wvY29nbml0by1pZHAudXMtZWFzdC0xLmFtYXpvbmF3cy5jb21cL3VzLWVhc3QtMV9CbWR6Ym1iRjMiLCJjbGllbnRfaWQiOiIydGk3NTJndWFyZTdpY2UzcWZxcThvZGg0cyIsIm9yaWdpbl9qdGkiOiIxM2Q4MDA0Ny05ZDcyLTQwOWUtOTA4Ny03MjViYzU1ZDhjYjciLCJldmVudF9pZCI6ImI2ZTQ5ZGFmLWIwZjAtNDVjMS1hZDY1LTM2ZGMyM2FkMWRiYiIsInRva2VuX3VzZSI6ImFjY2VzcyIsInNjb3BlIjoiYXdzLmNvZ25pdG8uc2lnbmluLnVzZXIuYWRtaW4iLCJhdXRoX3RpbWUiOjE3NDUxNjYyMzUsImV4cCI6MTc0NTE2OTgzNSwiaWF0IjoxNzQ1MTY2MjM1LCJqdGkiOiIwYjYxMDVlYS1mYzYxLTRmMzktYWEyZi03NjlhN2YwMjJjYjkiLCJ1c2VybmFtZSI6IjI0ODg4NDM4LWMwODEtNzAxZC00ZDdiLWFhYWM3M2ExOGY4NiJ9.jLcZDQTkq7T3UTMmwaL22HWGeAfttW4StYOwX9dtlk2Vm4VIvPhuvb7HjJjvS_SDsGO19YZF9bG-DA-Pyc2JiUMes7A28I-_L5B_kDt9ucaKYcEJBpwGeFp0svmpFDX8wZ__VdhZZauC8Go-6bbQW49lVehBSwXN8DAS37I9VOAclE2OKnpgFP1zwBMKjGtKjG84pEoZJ9AQ_GOZ3jtJE9jMvTzyNI3-cTAVwY47SbqIKyGQWjtK_LEKahlmmRKKn0CdqnfiRbJV50XElbceq3lCvl1HOzCSFfcbLPtxZ_OPL3hmEETyg5uK7L_OEERzZTxOGarXqSJf2td3oxXC_A"
                                        },
                                        "ExpiresIn": {
                                            "type": "number",
                                            "description": "Token expiration time in seconds",
                                            "example": "3600"
                                        },
                                        "IdToken": {
                                            "type": "string",
                                            "description": "JWT ID token",
                                            "example": "eyJraWQiOiJwbFhDUE9IZ3d6ZVdkYkpLZXg5Z0pcL2JabVwvb2luMndjOUQ2V3hIWlwvbGtZPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIyNDg4ODQzOC1jMDgxLTcwMWQtNGQ3Yi1hYWFjNzNhMThmODYiLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnVzLWVhc3QtMS5hbWF6b25hd3MuY29tXC91cy1lYXN0LTFfQm1kemJtYkYzIiwiY29nbml0bzp1c2VybmFtZSI6IjI0ODg4NDM4LWMwODEtNzAxZC00ZDdiLWFhYWM3M2ExOGY4NiIsIm9yaWdpbl9qdGkiOiIxM2Q4MDA0Ny05ZDcyLTQwOWUtOTA4Ny03MjViYzU1ZDhjYjciLCJhdWQiOiIydGk3NTJndWFyZTdpY2UzcWZxcThvZGg0cyIsImV2ZW50X2lkIjoiYjZlNDlkYWYtYjBmMC00NWMxLWFkNjUtMzZkYzIzYWQxZGJiIiwidG9rZW5fdXNlIjoiaWQiLCJhdXRoX3RpbWUiOjE3NDUxNjYyMzUsImV4cCI6MTc0NTE2OTgzNSwiaWF0IjoxNzQ1MTY2MjM1LCJqdGkiOiIwZjcxNjJiNC0zYmU3LTRkODgtOTE3My00ZTdmOTdjM2FhYmMiLCJlbWFpbCI6Imh5YW4yODkzQGdtYWlsLmNvbSJ9.bmQ9KOzyUiSpPH1QrZvDtGwk8VnK3HQfbU6eaVJ1_6QOlhi4-xeRCWBCZJIfcK2F18LXhQJ17Hwx-7dnm4HnVDBVyZb80qmVXO-vGX8JauA8ulwsZhyjX09TiqBmTEhip-MqpPq6SRyR5tErpJ6dF1IFg6i18JU1mLqE2XIy3SxZc4RtK5VW7J92y-Sd_8z0qgsXdfkDOEWi96DnQcrR1YXIjWonhj0T8WkcH_p94Bfp_SUxKLhTu-PpLU8W0HLNtgMC-VwtaxcPdNaT84uE8qjho9aXxu08GNgquqElTqkZi1Ru9njCkixPpYq4tt5mud-Qr1CHu9qLx5UG2zGeVg"
                                        },
                                        "RefreshToken": {
                                            "type": "string",
                                            "description": "JWT refresh token",
                                            "example": "eyJjdHkiOiJKV1QiLCJlbmMiOiJBMjU2R0NNIiwiYWxnIjoiUlNBLU9BRVAifQ.c7_A1VYdJPxjjpiU6_a7kTWCYZjXpeYzV1HdH3GcPok524dKEK_7IXDkujqQxPEhGiEmW3MuReskJhJy9Jv8xS4jI01QD4RSBcQYid1RqfTO0zYGsN0mrJfkkW9qbtgk7hNw4YJDVCrsBBY2Q2q9PTQkZojwkXEhVvkA4H1JU9XEx1Z6rKljHVfIvUyl93Be0qA7cDHsRgAOnde9BeMX_1bxJmVmgX_1I0AwGH5hrKf3L1wAY2qQR5aXw6NfeHOz63YJxfv9B5gRW57GfgncRkYbo7zs4PdTTug9FmciUcOR73bg5__aYC--RpQtTjP9cnUPWaZKhangYmnDv45AfA.YMKu7gsb08Lg47pI.53cIDAtFzHVfIk-U9-0VrKRYqHKjA287noa7fnMJdh7I9KpV5JDNHxRPDbFPvdyuRYdcjKEOsxM9R0ebX0PbwL7NcCyd0WbDBn8EysvEWvtj8FweJ-z3OiQSZkwydWxV3RAWe4q-D1U7aZLJwOsqAP3rgjMXH0ThysiBfjBt54euGNsd1x2bMDBy66qYFYAR1MpqCCdVL468kGUi9grLOedwynsrdEFZkggWQ7ZLbjL1jQpg8AkdnjFSX5lLrL4eMYyAP2ZVkFOnfC4g59QJocsEvdhV0PFKxgePW8IPPar9R8kmCFzeRHYmm7nih7d__tgVBI8zfqjxskUwmMNqdArC4GLBqmMXDFUw_GjTgAs8RyaWDUPyVEI5ezy-J1p0Nq4TVFs6Ac_AYgv3muarpnfA6ZMPxiHWGFzTjYeqAS6EvhgzMW8_99bJ_uDgsHnomA9IF4VOW1yIXxsVoMb__QK5Db02bLueMCMkau33ugSF8JS9pnI41tkBWhuiXSEWEui4G3WMJ8_yM_JNWyGbDVFXBsGeC6J8J0U7SLmjNOmfD2zEbx-UWBc5JLs1nGSkHV3UMHarGgOIlFVHGunnakCPyRo9RJmpsAhxuywALUveHJPSrwpJx-QJ6dcs5DYWb19HyvEZc5kJbAb0PeImVJ5hnMNzZY9xO5eOIDAh7sznZr_ORuKuFdj2Tk1IhfxueHre8-L7Ntap8MTW8rw6kbcuQ1EHac4-2phqZftLuHrvBQXlqHf-n_WW8OqGlwWzYQahLKw6tNT3qbYhHOyGCxVuUME5ABxlK5qUwt1uOsQ250McRYskfSVneeztZYvTFBcBfcfVciQ41FKVcCKswDuGl1-n60Dp7wAL_vHqXf2j93GH5KUocttrpMgqOF4QyujnnEZBZt6uT9IHCBFGXezGX-UcnPM_LLMY7m0cwHqHClCJgg9D13pwwRukjtlCrBm9jZAA7VTibBxatwlC8awaNG978JILk9CrIj72q6wFVxogWO1jv2-pOyNrgf_ZVhdaFEYIlVeIu6XyJ04KIfvbTMIoqTd6hnd5XgzlVDWpfeDzslbcRlFHEogIvLCpKyDhymfHsnpImTbYGkM6zVbRPcoVqppcx6XxSlBkOoZjuvobR1y9D4iok77bZD28UngixD0eIhTE1_nKDdS12qFYhsRMHPJevtRXFj59G9sCQZDtBg0ev2v9wEMBh_LGXwm87nwGdhAulZ7mdaGcpjqo69tGM0lAtz4LJeViGjQwGRHszmXFQ3VsHyS17kZk-6vAfyXeHe_xs4QDjjPXTd9rHYW0quMMfupfqnIG35D0nTBRNAp2lzvUxw.FMMP5l6-X1lE_zTB8M_55A"
                                        },
                                        "TokenType": {
                                            "type": "string",
                                            "description": "Type of token",
                                            "example": "Bearer"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Missing ID Token": {
                                        "value": {
                                            "error": "MISSING_GOOGLE_ID_TOKEN",
                                            "message": "Google ID token is required."
                                        }
                                    },
                                    "Invalid ID Token Type": {
                                        "value": {
                                            "error": "INVALID_GOOGLE_ID_TOKEN_TYPE",
                                            "message": "Google ID token must be a string."
                                        }
                                    },
                                    "Invalid ID Token": {
                                        "value": {
                                            "error": "INVALID_GOOGLE_ID_TOKEN",
                                            "message": "Invalid Google ID token format."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/v1/auth/id/verify": {
            "post": {
                "tags": ["Auth"],
                "summary": "Create Stripe Identity Verification Session",
                "description": "Creates a Stripe Identity Verification Session for a user.",
                "operationId": "createVerificationSession",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AuthorizationHeader"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "clientSecret": {
                                            "type": "string",
                                            "description": "Stripe verification session client secret",
                                            "example": "vs_1RLiciDVprfwF09mtJgSfMAY_secret_live_YWNjdF8xUktCZkxEVnByZndGMDltLF9TR0Y2TlAydDFMMFJEZ2ltVGRUQnRZOVRRVVNKbWRP0100p65i04pT"
                                        },
                                        "ephemeralKey": {
                                            "type": "string",
                                            "description": "Stripe verification session client secret",
                                            "example": "ek_live_YWNjdF8xUktCZkxEVnByZndGMDltLGRqS1ptTTJuZThQTERoRVZyZkhUNDFydnJSR21HWTQ_00f0TdCQUo"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },

        "/v1/user/profile": {
            "get": {
                "tags": ["User"],
                "summary": "Get User Profile",
                "description": "Retrieves the authenticated user's profile information",
                "operationId": "getUserProfile",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AuthorizationHeader"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "format": "uuid",
                                            "description": "User's unique identifier",
                                            "example": "123e4567-e89b-12d3-a456-426614174000"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email",
                                            "description": "User's email address",
                                            "example": "john.doe@example.com"
                                        },
                                        "firstName": {
                                            "type": "string",
                                            "description": "User's first name",
                                            "example": "John"
                                        },
                                        "lastName": {
                                            "type": "string",
                                            "description": "User's last name",
                                            "example": "Doe"
                                        },
                                        "profileImageUrl": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "URL to user's profile image",
                                            "example": "https://example.com/images/profile.jpg"
                                        },
                                        "createdAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "Timestamp when the user was created",
                                            "example": "2024-01-01T00:00:00Z"
                                        },
                                        "updatedAt": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "Timestamp when the user was last updated",
                                            "example": "2024-01-01T00:00:00Z"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "User Not Found": {
                                        "value": {
                                            "error": "USER_NOT_FOUND",
                                            "message": "User does not exist."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "put": {
                "tags": ["User"],
                "summary": "Update User Profile",
                "description": "Update the user's profile information",
                "operationId": "updateUserProfile",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AuthorizationHeader"
                    }
                ],
                "requestBody": {
                    "description": "User profile update data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "firstName": {
                                        "type": "string",
                                        "description": "User's first name",
                                        "example": "John"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "description": "User's last name",
                                        "example": "Doe"
                                    },
                                    "phoneNumber": {
                                        "type": "string",
                                        "description": "User's phone number",
                                        "example": "+1234567890"
                                    }
                                },
                                "minProperties": 1
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User profile successfully updated."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "User Not Found": {
                                        "value": {
                                            "error": "USER_NOT_FOUND",
                                            "message": "User does not exist."
                                        }
                                    },
                                    "At least one field is required": {
                                        "value": {
                                            "error": "VALIDATION_ERROR",
                                            "message": "At least one field is required."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },
        "/v1/user/profile/image/upload-url": {
            "get": {
                "tags": ["User"],
                "summary": "Get Profile Image Upload URL",
                "description": "Retrieves an profile image upload URL for authenticated user.",
                "operationId": "userGetProfileImageUploadUrl",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AuthorizationHeader"
                    },
                    {
                        "in": "query",
                        "name": "mimeType",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "default": "image/jpeg"
                        },
                        "description": "MIME type of the image to be uploaded",
                        "example": "image/jpeg"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "uploadUrl": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "URL to upload the profile image",
                                            "example": "https://ohana-assets-bucket-dev.s3.us-east-1.amazonaws.com/users/443844d8-f0c1-7078-d71f-11cb010411f7/profile/images/443844d8-f0c1-7078-d71f-11cb010411f7_1747672978.jpg?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=ASIAVYDV5VSHCSHFV3VW%2F20250519%2Fus-east-1%2Fs3%2Faws4_request&X-Amz-Date=20250519T164258Z&X-Amz-Expires=600&X-Amz-Security-Token=IQoJb3JpZ2luX2VjENn%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEaCXVzLWVhc3QtMSJGMEQCIHpNuF18iA8ia6HyS3qXv0y4fGE7wlJ6qx3hDJMDs7%2B3AiAg5y14LupT9gW6lkxotBe2uLX7c6Ytr0G5mUUSFqkJbCqqAwiS%2F%2F%2F%2F%2F%2F%2F%2F%2F%2F8BEAAaDDM5NTM4NDMwMjczNCIMSWVO2cHfDEh68xrNKv4Ck9RlsJpqkAXe4hxTJPP%2BridzXq2jnFH8EoHVJ9tCCptEG2SNACE3LSnyAvpZJtmBB9eEoyqwS33D2dfV5cyl0576Fy7q%2BR237lGuB%2Fp4aI9RI4XAJzPQZ7aevhEhO0bSEnPa6At49hHxp3Eobcdga2Ole%2B1AXnIU76dYjEN8C3DpraFc3l6%2BUqXPcf6SSz1F%2B8osk9AwPRQ5oq8ZjbNmF7kLoAblH%2Bw%2BhiNBCWpF3EWlCSrtl4UM2tt30uLskcUA1TKOD8bhJDozam%2F5xOf%2BSabJaQAShW2PyiGuhACXh0D0R4LfwNl9dliZQ0saruCgrsxsQOR8AE2Ygl54MPpVqqkWfRPdVIQkdMqg%2F7ZATUQ3Gg%2BLeB0CY8C48BA56bpskqCakuRe7aDxtij9zm7YzifhFtIVJ8e0F009oKJHMh%2FGD0JIhylnqWONApPnIsr2%2Fp8vLOYGI%2FTYpXNy76PIkn%2F7rPM4VanqpYKHR%2Bst1TRXyG5K2ypZji0Ut2wxojCSv63BBjqeAWsA2ALM%2FVseA%2BwlLG8nX3ALzlO82mMPWwgc1p8oZAWDZZ8B5z5rMUy11yJIP8mOalrzjsA9zL1%2FvrOzsFxQPy2K5Y%2BFGdUWy2VdUzGtPcvbCfgqYvjUc2dfovRqEvBCRZGr61BVLDwnKa0dk%2Fqol8KdWb%2BO8dI7eCIsnimz5fo8rciMe8ZpdyA%2BKf5sQ5nB%2BdUh8EzsztOP77dD8cbJ&X-Amz-Signature=00fc28979eb33aa79bc2f7ba42f5b1b30ef5d1411cba9c05fd9a0a00469b64ce&X-Amz-SignedHeaders=host&x-amz-checksum-crc32=AAAAAA%3D%3D&x-amz-sdk-checksum-algorithm=CRC32&x-id=PutObject"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "User Not Found": {
                                        "value": {
                                            "error": "USER_NOT_FOUND",
                                            "message": "User does not exist."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        },

        "/v1/host/profile": {
            "get": {
                "tags": ["Host"],
                "summary": "Get Host Profile",
                "description": "Retrieves the authenticated host's profile information",
                "operationId": "getHostProfile",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AuthorizationHeader"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "bio": {
                                            "type": "string",
                                            "format": "string",
                                            "description": "Host's biography",
                                            "example": "Software engineer, Dog lover, occasional hiker, and amateur baker based in Seattle."
                                        },
                                        "languages": {
                                            "type": "array",
                                            "format": "string",
                                            "description": "Languages spoken by the host",
                                            "example": [
                                                "English",
                                                "Thai",
                                                "Mandarin"
                                            ]
                                        },
                                        "socials": {
                                            "type": "array",
                                            "format": "string",
                                            "description": "Host's social media links",
                                            "example": [
                                                "https://www.instagram.com/john_doe",
                                                "https://www.facebook.com/john.doe",
                                                "https://www.twitter.com/john_doe"
                                            ]
                                        },
                                        "isActive": {
                                            "type": "boolean",
                                            "format": "boolean",
                                            "description": "Host's active status",
                                            "example": true
                                        },
                                        "profileImageUrl": {
                                            "type": "string",
                                            "format": "uri",
                                            "description": "URL to user's profile image",
                                            "example": "https://example.com/images/profile.jpg"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "Host Not Found": {
                                        "value": {
                                            "error": "HOST_NOT_FOUND",
                                            "message": "Host does not exist."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            },
            "put": {
                "tags": ["Host"],
                "summary": "Update Host Profile",
                "description": "Update the host's profile information",
                "operationId": "updateHostProfile",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/AuthorizationHeader"
                    }
                ],
                "requestBody": {
                    "description": "Host profile update data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "bio": {
                                        "type": "string",
                                        "format": "string",
                                        "description": "Host's biography",
                                        "example": "Software engineer, Dog lover, occasional hiker, and amateur baker based in Seattle."
                                    },
                                    "languages": {
                                        "type": "array",
                                        "format": "string",
                                        "description": "Languages spoken by the host",
                                        "example": [
                                            "English",
                                            "Thai",
                                            "Mandarin"
                                        ]
                                    },
                                    "phoneNumber": {
                                        "type": "string",
                                        "description": "User's phone number",
                                        "example": "+1234567890"
                                    }
                                },
                                "minProperties": 1
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User profile successfully updated."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "examples": {
                                    "User Not Found": {
                                        "value": {
                                            "error": "USER_NOT_FOUND",
                                            "message": "User does not exist."
                                        }
                                    },
                                    "At least one field is required": {
                                        "value": {
                                            "error": "VALIDATION_ERROR",
                                            "message": "At least one field is required."
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "500": {
                        "$ref": "#/components/responses/InternalServerError"
                    }
                }
            }
        }
    },
    "components": {
        "parameters": {
            "AuthorizationHeader": {
                "in": "header",
                "name": "Authorization",
                "required": true,
                "schema": {
                    "type": "string"
                },
                "description": "JWT Bearer Token",
                "example": "Bearer eyJraWQiOiJwbFhDUE9IZ3d6ZVdkYkpLZXg5Z0pcL2JabVwvb2luMndjOUQ2V3hIWlwvbGtZPSIsImFsZyI6IlJTMjU2In0.eyJzdWIiOiIyNDg4ODQzOC1jMDgxLTcwMWQtNGQ3Yi1hYWFjNzNhMThmODYiLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLnVzLWVhc3QtMS5hbWF6b25hd3MuY29tXC91cy1lYXN0LTFfQm1kemJtYkYzIiwiY29nbml0bzp1c2VybmFtZSI6IjI0ODg4NDM4LWMwODEtNzAxZC00ZDdiLWFhYWM3M2ExOGY4NiIsIm9yaWdpbl9qdGkiOiIxM2Q4MDA0Ny05ZDcyLTQwOWUtOTA4Ny03MjViYzU1ZDhjYjciLCJhdWQiOiIydGk3NTJndWFyZTdpY2UzcWZxcThvZGg0cyIsImV2ZW50X2lkIjoiYjZlNDlkYWYtYjBmMC00NWMxLWFkNjUtMzZkYzIzYWQxZGJiIiwidG9rZW5fdXNlIjoiaWQiLCJhdXRoX3RpbWUiOjE3NDUxNjYyMzUsImV4cCI6MTc0NTE2OTgzNSwiaWF0IjoxNzQ1MTY2MjM1LCJqdGkiOiIwZjcxNjJiNC0zYmU3LTRkODgtOTE3My00ZTdmOTdjM2FhYmMiLCJlbWFpbCI6Imh5YW4yODkzQGdtYWlsLmNvbSJ9.bmQ9KOzyUiSpPH1QrZvDtGwk8VnK3HQfbU6eaVJ1_6QOlhi4-xeRCWBCZJIfcK2F18LXhQJ17Hwx-7dnm4HnVDBVyZb80qmVXO-vGX8JauA8ulwsZhyjX09TiqBmTEhip-MqpPq6SRyR5tErpJ6dF1IFg6i18JU1mLqE2XIy3SxZc4RtK5VW7J92y-Sd_8z0qgsXdfkDOEWi96DnQcrR1YXIjWonhj0T8WkcH_p94Bfp_SUxKLhTu-PpLU8W0HLNtgMC-VwtaxcPdNaT84uE8qjho9aXxu08GNgquqElTqkZi1Ru9njCkixPpYq4tt5mud-Qr1CHu9qLx5UG2zGeVg"
            }
        },
        "responses": {
            "Unauthorized": {
                "description": "Unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string"
                                },
                                "message": {
                                    "type": "string"
                                }
                            }
                        },
                        "examples": {
                            "Unauthorized": {
                                "value": {
                                    "message": "Unauthorized"
                                }
                            }
                        }
                    }
                }
            },
            "InternalServerError": {
                "description": "Internal server error",
                "content": {
                    "application/json": {
                        "schema": {
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string",
                                    "example": "Internal server error"
                                },
                                "message": {
                                    "type": "string",
                                    "example": "An unexpected error occurred."
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
